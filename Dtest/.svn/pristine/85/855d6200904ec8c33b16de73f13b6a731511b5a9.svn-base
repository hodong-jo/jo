package socket;

import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.util.StringTokenizer;

import org.apache.log4j.Logger;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import utils.IOUtil;

public class DongClient {
	static Logger logger = Logger.getLogger(TestClient.class);

	public static void main(String[] args) {
		InetSocketAddress endpoint = new InetSocketAddress("localhost", 9000);
		Socket client = new Socket();
		Gson gson = new GsonBuilder().setPrettyPrinting().create();
		FileWriter fw = null;
		OutputStream out = null;
		InputStream in = null;
		int connectTimeout = 1000; //milliseconds
		try {
			client.connect(endpoint, connectTimeout);
			logger.info("Connected : [" + endpoint + "]");
			
			out = client.getOutputStream();
			in = client.getInputStream();
			
			String dongName = "±¸·Îµ¿";
			String check = "1";
			byte[] sendData = dongName.getBytes();
			int len = sendData.length;
			String lenStr = String.format("%04d", len);
			lenStr += check;
			out.write(lenStr.getBytes());
			out.write(sendData);
			out.flush();
			
			logger.info("Send : [" + "Send success" + "]");
			
			fw = new FileWriter("dong.txt");
			byte[] header = new byte[5];
			
			while(true) {
				in.read(header);
				int length = Integer.parseInt(new String(header).substring(0,4));
				int recvCheck = Integer.parseInt(new String(header).substring(4,5));
				
				byte[] recvData = new byte[length];
				in.read(recvData);
				
				String data = new String(recvData);
				StringTokenizer st = new StringTokenizer(data,",");
				Dong dong = new Dong();
				
				dong.setSeq(Integer.parseInt((String) st.nextElement()));
				dong.setZipcode((String) st.nextElement());
				dong.setSido((String) st.nextElement());
				dong.setGugun((String) st.nextElement());
				dong.setDong((String) st.nextElement());
				dong.setBunji((String) st.nextElement());
				
				gson.toJson(dong,fw);
				
				if(recvCheck == 1)
					break;
			}
			
			logger.info("Recv : [" + "Recv success" + "]");
			
		} catch (FileNotFoundException e) {
			logger.error("Failed:", e);
		} catch (IOException e) {
			logger.error("Failed:", e);
		} finally {
			if(fw != null) { try { fw.close(); } catch (IOException e) { e.printStackTrace(); }}
			IOUtil.close(in);
			IOUtil.close(out);
			IOUtil.close(client);
			logger.info("Closed : [" + endpoint + "]");   
		}
	}
}
