package socket;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Arrays;
import java.util.concurrent.atomic.AtomicInteger;

import org.apache.commons.io.IOUtils;
import org.apache.log4j.Logger;

import utils.IOUtil;


public class TestServer {
	static Logger logger = Logger.getLogger(SocketServer.class);
	static AtomicInteger SEQ = new AtomicInteger();

	public static void main(String[] args) {
		int port = 9000;
		ServerSocket ss = null;
		try{
			InetSocketAddress endpoint = new InetSocketAddress(port);
			ss = new ServerSocket();
			ss.bind(endpoint);
			logger.info("Socket server listen : " + port);
			
			while(true){
				Socket socket = ss.accept();
				InputStream in = null;
				OutputStream out = null;
				BufferedReader bfr = null;
				ByteArrayOutputStream bout = new ByteArrayOutputStream(); 
				int seq = SEQ.incrementAndGet();
				try{
					in = socket.getInputStream();
					out = socket.getOutputStream();
					
					byte[] header = new byte[4];
					byte[] recvData = new byte[8];
					in.read(header);
					int recvDataLength = recvData.length;
					int length = 0;
					while(in.available() > recvDataLength) {
						in.read(recvData);
						bout.write(recvData);
						length = in.available();
					}
					in.read(recvData , 0 , length);
					bout.write(recvData, 0 ,length);
					out.write(bout.toByteArray());
					out.flush();
					
					logger.info("Send[" + seq + "] : [" + bout.toString() + "]");
					
					
				}catch(Exception ex){
					logger.error("[#ERROR][" + seq + "]", ex);
				}finally{
					IOUtil.close(bfr);
					IOUtil.close(socket);
				}
			
			}
			
		}catch(Exception ex){
			ex.printStackTrace();
		}finally {
			
			IOUtil.close(ss);
		}
	}
}